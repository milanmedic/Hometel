// <auto-generated />
using System;
using Hometel.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hometel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190826151515_AddEntitiesToDb")]
    partial class AddEntitiesToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Hometel.Domain.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PostalNumber");

                    b.Property<string>("StreetName");

                    b.Property<int>("StreetNum");

                    b.Property<string>("Town");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApartmentId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApartmentType");

                    b.Property<int>("AppartmentStatus");

                    b.Property<int>("GuestNumber");

                    b.Property<string>("GuestUsername");

                    b.Property<string>("HostId");

                    b.Property<int?>("LocationId");

                    b.Property<int>("Price");

                    b.Property<int>("ReservationEndTime");

                    b.Property<int>("ReservationStartTime");

                    b.Property<int>("RoomNumber");

                    b.HasKey("Id");

                    b.HasIndex("GuestUsername");

                    b.HasIndex("HostId");

                    b.HasIndex("LocationId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApartmentId");

                    b.Property<string>("Description");

                    b.Property<string>("Grade");

                    b.Property<string>("GuestUsername");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("GuestUsername");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.AvailableDates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApartmentId");

                    b.Property<DateTime>("AvailableDate");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("AvailableDates");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.Dates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ApartmentDate");

                    b.Property<int?>("ApartmentId");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApartmentId");

                    b.Property<string>("ImagePath");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GuestUsername");

                    b.Property<int>("NumberOfDays");

                    b.Property<DateTime>("ReservationStart");

                    b.Property<int>("ReservationStatus");

                    b.Property<int?>("ReservedApartmentId");

                    b.Property<int>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("GuestUsername");

                    b.HasIndex("ReservedApartmentId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Hometel.Domain.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Token");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Guest", b =>
                {
                    b.HasBaseType("Hometel.Domain.Models.User");

                    b.HasDiscriminator().HasValue("Guest");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Host", b =>
                {
                    b.HasBaseType("Hometel.Domain.Models.User");

                    b.HasDiscriminator().HasValue("Host");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Amenity", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Apartment")
                        .WithMany("Amenities")
                        .HasForeignKey("ApartmentId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Apartment", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Guest")
                        .WithMany("RentedApartments")
                        .HasForeignKey("GuestUsername");

                    b.HasOne("Hometel.Domain.Models.Host", "Host")
                        .WithMany("ListOfApartments")
                        .HasForeignKey("HostId");

                    b.HasOne("Hometel.Domain.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Comment", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Apartment", "Apartment")
                        .WithMany("Comments")
                        .HasForeignKey("ApartmentId");

                    b.HasOne("Hometel.Domain.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestUsername");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.AvailableDates", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Apartment")
                        .WithMany("AvailableDates")
                        .HasForeignKey("ApartmentId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.Dates", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Apartment")
                        .WithMany("Dates")
                        .HasForeignKey("ApartmentId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Helpers.Image", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Apartment")
                        .WithMany("Images")
                        .HasForeignKey("ApartmentId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Location", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("Hometel.Domain.Models.Reservation", b =>
                {
                    b.HasOne("Hometel.Domain.Models.Guest", "Guest")
                        .WithMany("ListOfReservations")
                        .HasForeignKey("GuestUsername");

                    b.HasOne("Hometel.Domain.Models.Apartment", "ReservedApartment")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedApartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
